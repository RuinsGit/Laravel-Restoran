<?php
namespace App\Http\Controllers;

use App\Models\Product;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Twilio\Rest\Client;

class CartController extends Controller
{
    // Sepete Ã¼rÃ¼n ekle
    public function add(Request $request, $id)
    {
        $product = Product::find($id);

        if ($product) {
            // Mevcut sepeti oturumdan al
            $cart = session()->get('cart', []);

            // Sepete Ã¼rÃ¼nÃ¼ ekle veya miktarÄ±nÄ± artÄ±r
            if (isset($cart[$id])) {
                $cart[$id]['quantity']++;
            } else {
                $cart[$id] = [
                    'name' => $product->name,
                    'price' => $product->price,
                    'quantity' => 1,
                    'image_url' => $product->image_url,
                ];
            }

            // Sepeti oturuma kaydet
            session()->put('cart', $cart);
            return response()->json(['message' => 'ÃœrÃ¼n sepete eklendi.']);
        }

        return response()->json(['message' => 'ÃœrÃ¼n bulunamadÄ±.'], 404);
    }

    // Sepeti gÃ¶rÃ¼ntÃ¼le
    public function viewCart()
    {
        $cart = session()->get('cart', []);
        return view('cart.index', compact('cart')); // 'cart.index' gÃ¶rÃ¼nÃ¼mÃ¼ne yÃ¶nlendir
    }

    // Sepeti onayla ve WhatsApp mesajÄ± gÃ¶nder

    // Sepeti onayla ve WhatsApp mesajÄ± gÃ¶nder
    public function confirmCart()
    {
        $cart = session()->get('cart', []);

        if (empty($cart)) {
            return redirect()->route('cart.index')->with('error', 'Sepetiniz boÅŸ.');
        }

        // WhatsApp mesajÄ± gÃ¶ndermek iÃ§in Twilio yapÄ±landÄ±rmasÄ±
        $twilioSid = config('services.twilio.sid');
        $twilioToken = config('services.twilio.token');
        $twilioClient = new Client($twilioSid, $twilioToken);

        $recipients = [
            'whatsapp:+994514940398', // AlÄ±cÄ± numarasÄ±
        ];

        try {
            foreach ($recipients as $recipient) {
                foreach ($cart as $product) {
                    // Mesaj metnini oluÅŸtur
                    $messageBody = "ğŸ›’ *ÃœrÃ¼n AdÄ±:* {$product['name']}\n";
                    $messageBody .= "ğŸ’² *Fiyat:* {$product['price']} TL\n";
                    $messageBody .= "-----------------------------------\n"; // ÃœrÃ¼nler arasÄ±nda ayrÄ±m iÃ§in

                    // Ã–nce resmi gÃ¶nder
                    if (!empty($product['image_url'])) {
                        $twilioClient->messages->create(
                            $recipient,
                            [
                                'from' => 'whatsapp:+14155238886', // Twilio WhatsApp numarasÄ±
                                'mediaUrl' => [$product['image_url']], // ÃœrÃ¼n fotoÄŸrafÄ±nÄ± gÃ¶nder
                                'body' => $messageBody // MesajÄ± aynÄ± anda ekliyoruz
                            ]
                        );
                    } else {
                        // EÄŸer Ã¼rÃ¼n resmi yoksa, yalnÄ±zca metin mesajÄ±nÄ± gÃ¶nder
                        $twilioClient->messages->create(
                            $recipient,
                            [
                                'from' => 'whatsapp:+14155238886', // Twilio WhatsApp numarasÄ±
                                'body' => $messageBody
                            ]
                        );
                    }
                }
            }

            // Sepeti boÅŸalt
            session()->forget('cart');
            return redirect()->route('products')->with('success', 'Sepet onaylandÄ± ve mesaj gÃ¶nderildi.');
        } catch (\Exception $e) {
            return redirect()->route('cart.index')->with('error', 'Mesaj gÃ¶nderilirken bir hata oluÅŸtu: ' . $e->getMessage());
        }
    }










    // Sepetten Ã¼rÃ¼n silme
    public function remove($id)
    {
        // Sepet verisini alÄ±n
        $cart = session('cart', []);

        // ÃœrÃ¼nÃ¼ sepetten sil
        if (isset($cart[$id])) {
            unset($cart[$id]);
            session(['cart' => $cart]);
            return response()->json(['message' => 'ÃœrÃ¼n sepetten silindi.']);
        }

        return response()->json(['message' => 'ÃœrÃ¼n bulunamadÄ±.'], 404);
    }



}



